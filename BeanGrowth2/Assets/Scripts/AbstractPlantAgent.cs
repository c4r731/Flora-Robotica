//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
namespace AssemblyCSharp
{
	/***
	 * 
	 * AbstractPlantAgent is an abstract class which contains the base definitions of agent.
	 *
	 */
	public abstract class AbstractPlantAgent : MonoBehaviour
	{	
		/**
		 * MasterConfig mc is global configuration and data storage. it also handles the lockings
		 */
		protected MasterConfig mc;
		/***
		 * actualGrammar contains the SG-grammar part which is actually executed
		 */
		protected string actualGrammar;

        /**
         * defines if agent is a main branch or not
         */
        protected int mainBranch;

        /**
         * KA
         */
        private GameObject leadTarget;

        /***
		 * will be used to scale the bodyparts which the agent generates and copies.
		 */
        private Vector3 scale = new Vector3(1.0f,1.0f,1.0f);
		
		public Vector3 ScaleMe{
			get{return scale;}
			set{this.scale=value;}
		}

		public string ActualGrammar{
			set{ actualGrammar = value; }
		}

        public int MainBranch
        {
            get { return this.mainBranch; }
            set { this.mainBranch = value; }
        }
		
		public MasterConfig MC{
			set{ this.mc = value; }
		}

        public GameObject LeadTarget{
            get { return this.leadTarget;}
            set { this.leadTarget = value; }
        }

        public void setLeadTargetTo(Vector3 vector)
        {
            Vector3 tmp = vector;
            if (MainBranch != 0)
            {
                tmp.y = vector.z;
                tmp.z = vector.y;
            }
            this.leadTarget.transform.position = tmp;
        }

        public AbstractPlantAgent ()
		{
            
		}



		/***
		 * main method where behaviour of an agent is described.
		 */
		public abstract void growthPlan();
	}
}

